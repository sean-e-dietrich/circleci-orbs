version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.0.0
  ci-tools:
    description: >
      Tools and commands used within Kanopi to increase productivity.
    jobs:
      phpcs-drupal:
        description: Run PHP Code Sniffer Tests on Drupal Code.
        executor: phpcs_executor
        steps:
          - install_phpcs
      phpcs-wordpress:
        description: Run PHP Code Sniffer Tests on WordPress Code.
        executor: phpcs_executor
        steps:
          - install_phpcs
    commands:
      install_phpcs:
        steps:
          - run:
              name: Install Packages
              command: |
                # Add composer bin directory to PATH
                echo -e "\n"'export PATH="$PATH:$HOME/.composer/vendor/bin"' >> $BASH_ENV; \
                source $BASH_ENV; \
                # Drupal Coder & WP Coding Standards w/ a matching version of PHP_CodeSniffer
                composer global require drupal/coder wp-coding-standards/wpcs phpcompatibility/phpcompatibility-wp >/dev/null; \
                phpcs --config-set installed_paths $HOME/.composer/vendor/drupal/coder/coder_sniffer/,\
                $HOME/.composer/vendor/wp-coding-standards/wpcs/,\
                $HOME/.composer/vendor/phpcompatibility/php-compatibility/PHPCompatibility/,\
                $HOME/.composer/vendor/phpcompatibility/phpcompatibility-wp/PHPCompatibilityWP,\
                $HOME/.composer/vendor/phpcompatibility/phpcompatibility-paragonie/PHPCompatibilityParagonieRandomCompat;
          - run:
              name: Validate PHPCS Installed
              command: phpcs -i && phpcs --config-show

      phpcs_check_code:
        parameters:
          standards:
            type: string
          extensions:
            type: string
          location:
            type: string
        steps:
          - checkout
          - run:
              name: "Run PHPCS Code"
              command: phpcs --standard="<<parameters.standards>>" --extensions="<<parameters.extensions>>" <<parameters.location>>

      phpcs_check_drupal:
        parameters:
          standards:
            type: string
            default: "Drupal,DrupalPractice"
          extensions:
            type: string
            default: "php,module,inc,install,test,profile,theme,css,info,txt,md"
          location:
            type: string
            default: "."
        steps:
          - phpcs_check_code:
              standards: <<parameters.standards>>
              extensions: <<parameters.extensions>>
              location: <<parameters.location>>

      phpcs_check_wordpress:
        parameters:
          standards:
            type: string
            default: "WordPress,WordPress-Extra,WordPress-Core"
          extensions:
            type: string
            default: "php"
          location:
            type: string
            default: "."
        steps:
          - phpcs_check_code:
              standards: <<parameters.standards>>
              extensions: <<parameters.extensions>>
              location: <<parameters.location>>

    executors:
      phpcs_executor:
        docker:
          - image: circleci/php:7.2-cli-buster

all-filters: &all-filters
  tags:
    only: /.*/
  branches:
    only: /.*/

dev-filters: &dev-filters
  tags:
    ignore: /.*/
  branches:
    only: /.*/

prod-filters: &prod-filters
  tags:
    only: /.*/
  branches:
    ignore: /.*/

workflows:
  version: 2.1
  test-phpcs:
    jobs:
      - orb-tools/lint:
          filters: *all-filters

      - ci-tools/phpcs-drupal:
          requires: [orb-tools/lint]
          filters: *all-filters
      - ci-tools/phpcs-wordpress:
          requires: [orb-tools/lint]
          filters: *all-filters

      - extract-inline:
          requires: [ci-tools/phpcs-drupal, ci-tools/phpcs-wordpress]
          filters: *all-filters

      - orb-tools/publish-dev:
          requires: [extract-inline]
          orb-name: sean-e-dietrich/phpcs
          orb-path: .circleci/extract-inline-orb/orb.yml
          filters: *dev-filters

      - orb-tools/publish:
          requires: [extract-inline]
          filters: *prod-filters
          orb-ref: sean-e-dietrich/phpcs@${CIRCLE_TAG}
          orb-path: .circleci/extract-inline-orb/orb.yml
          attach-workspace: true

jobs:
  # Used for Extracting Orb
  extract-inline:
    docker:
      - image: circleci/ruby:buster
    steps:
      - checkout
      - orb-tools/extract-inline-orb:
          orb: ci-tools
          source: .circleci/config.yml
