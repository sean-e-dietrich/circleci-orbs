version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.0.0
  ci-tools:
    description: >
      Tools and commands used within Kanopi to increase productivity.
    jobs:
      phpcs-drupal:
        description: Run PHP Code Sniffer Tests on Drupal Code.
        executor: phpcs_executor
        parameters:
          standards:
            type: string
            default: "Drupal,DrupalPractice"
          extensions:
            type: string
            default: "php,module,inc,install,test,profile,theme,css,info,txt,md"
          location:
            type: string
            default: "."
        steps:
          - install_phpcs
          - phpcs_check_code:
              standards: <<parameters.standards>>
              extensions: <<parameters.extensions>>
              location: <<parameters.location>>

      phpcs-wordpress:
        description: Run PHP Code Sniffer Tests on WordPress Code.
        executor: phpcs_executor
        parameters:
          standards:
            type: string
            default: "WordPress,WordPress-Extra,WordPress-Core"
          extensions:
            type: string
            default: "php"
          location:
            type: string
            default: "."
        steps:
          - install_phpcs
          - phpcs_check_code:
              standards: <<parameters.standards>>
              extensions: <<parameters.extensions>>
              location: <<parameters.location>>

    commands:
      install_phpcs:
        steps:
          - run:
              name: Install Packages
              command: |
                echo -e "\n"'export PATH="$PATH:$HOME/.composer/vendor/bin"' >> $BASH_ENV
                source $BASH_ENV
                composer global require drupal/coder wp-coding-standards/wpcs phpcompatibility/phpcompatibility-wp >/dev/null
                phpcs --config-set installed_paths $HOME/.composer/vendor/drupal/coder/coder_sniffer/,\
                $HOME/.composer/vendor/wp-coding-standards/wpcs/,\
                $HOME/.composer/vendor/phpcompatibility/php-compatibility/PHPCompatibility/,\
                $HOME/.composer/vendor/phpcompatibility/phpcompatibility-wp/PHPCompatibilityWP,\
                $HOME/.composer/vendor/phpcompatibility/phpcompatibility-paragonie/PHPCompatibilityParagonieRandomCompat
          - run:
              name: Validate PHPCS Installed
              command: phpcs -i && phpcs --config-show

      phpcs_check_code:
        parameters:
          standards:
            type: string
          extensions:
            type: string
          location:
            type: string
        steps:
          - checkout
          - run:
              name: "Run PHPCS Code"
              command: phpcs --standard="<<parameters.standards>>" --extensions="<<parameters.extensions>>" <<parameters.location>>

    executors:
      phpcs_executor:
        parameters:
          tag:
            type: string
            default: "7.2-cli-buster"
        docker:
          - image: circleci/php:<<parameters.tag>>

all-filters: &all-filters
  tags:
    only: /.*/
  branches:
    only: /.*/

dev-filters: &dev-filters
  tags:
    ignore: /.*/
  branches:
    only: /.*/

prod-filters: &prod-filters
  tags:
    only: /.*/
  branches:
    ignore: /.*/

workflows:
  version: 2.1
  test-phpcs:
    jobs:
      - orb-tools/lint:
          filters: *all-filters

      - ci-tools/phpcs-drupal:
          filters: *all-filters
          requires: [orb-tools/lint]
      - ci-tools/phpcs-wordpress:
          filters: *all-filters
          requires: [orb-tools/lint]

      - extract-inline:
          filters: *all-filters
          requires:
            - ci-tools/phpcs-drupal
            - ci-tools/phpcs-wordpress

      - orb-tools/publish-dev:
          filters: *dev-filters
          requires: [extract-inline]
          orb-name: sean-e-dietrich/ci-tools

      - orb-tools/publish:
          filters: *prod-filters
          requires: [extract-inline]
          orb-ref: sean-e-dietrich/ci-tools@${CIRCLE_TAG}
          attach-workspace: true

jobs:
  # Used for Extracting Orb
  extract-inline:
    executor: orb-tools/alpine
    steps:
      - checkout
      - run:
          name: Install YQ
          command: |
            apk add wget
            wget -O /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/3.1.2/yq_linux_amd64"
            chmod 755 /usr/local/bin/yq
      - run:
          name: Extract Orb
          command: yq r .circleci/config.yml orbs/ci-tools > src/ci-tools.yml
      - store_artifacts:
          path: src
      - persist_to_workspace:
          paths:
            - src/ci-tools.yml
          root: .
      - run:
          name: Display Extracted Orb
          command: cat src/ci-tools.yml

  # Check Spelling of the README.md file
  check-spelling:
    docker:
      - image: circleci/buildpack-deps:jessie
    steps:
      - checkout
      # - run:
      #     name: Check Spelling
      #     command: aspell
