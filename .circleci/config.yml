version: 2.1

description: >
  Kanopi Tools

orbs:
  orb-tools: circleci/orb-tools@9.0.0
  phpcs:
    jobs:
      drupal:
        executor: phpcs_executor
        steps:
          - install_phpcs
      wordpress:
        executor: phpcs_executor
        steps:
          - install_phpcs

    commands:
      install_phpcs:
        steps:
          - run:
              name: Install Packages
              command: |
                # Add composer bin directory to PATH
                echo -e "\n"'export PATH="$PATH:$HOME/.composer/vendor/bin"' >> $HOME/.profile; \
                # Reload updated PATH from profile to make composer/drush/etc. visible below
                . $HOME/.profile; \
                # Install cgr to use it in-place of `composer global require`
                composer global require consolidation/cgr >/dev/null; \
                # Drupal Coder & WP Coding Standards w/ a matching version of PHP_CodeSniffer
                composer global require drupal/coder wp-coding-standards/wpcs phpcompatibility/phpcompatibility-wp >/dev/null; \
                phpcs --config-set installed_paths \
                  $HOME/.composer/vendor/drupal/coder/coder_sniffer/,\
                  $HOME/.composer/vendor/wp-coding-standards/wpcs/,\
                  $HOME/.composer/vendor/phpcompatibility/php-compatibility/PHPCompatibility/,\
                  $HOME/.composer/vendor/phpcompatibility/phpcompatibility-wp/PHPCompatibilityWP,\
                  $HOME/.composer/vendor/phpcompatibility/phpcompatibility-paragonie/PHPCompatibilityParagonieRandomCompat;
          - run:
              name: Validate
              command: phpcs -i
      check_code:
        parameters:
          project:
            description: "The type of project being checked. Currently only Drupal and WordPress are supported."
            type: enum
            default: "none"
            enum: ["wordpress", "drupal", "none"]
          standards:
            description: "What are the standards that should be checked or what is the path to the PHPCS configuration file to use."
            type: string
            default: ""
          extensions:
            description: "What file extensions should be checked."
            type: string
            default: ""
          location:
            description: "What directory or file should be checked."
            type: string
            default: ""
          arguments:
            description: "The arguments to use to instead of the defaults."
            type: string
            default: ""
        steps:
          - run:
              name: Execute PHPCS
              command: |
                CODING_STANDARDS=""
                FILE_EXTENSION=""

                case "<<parameters.project>>" in
                  drupal)
                    CODING_STANDARDS="Drupal,DrupalPractice"
                    FILE_EXTENSION="php,module,inc,install,test,profile,theme,css,info,txt,md"
                    ;;
                  wordpress)
                    CODING_STANDARDS="WordPress,WordPress-Extra,WordPress-Core"
                    FILE_EXTENSION="php"
                    ;;
                esac

                if [[ "${CODING_STANDARDS}" != "" ]]; then
                  phpcs --standard="${CODING_STANDARDS}" <<parameters.location>>
                fi
    executors:
      phpcs_executor:
        docker:
          - image: circleci/php:7.2-cli-buster

workflows:
  version: 2.1
  test-phpcs:
    - phpcs/drupal
    - phpcs/wordpress
    - orb-tools/extract-inline-orb:
        requires:
          - phpcs/drupal
          - phpcs/wordpress
        orb: phpcs
        source: .circleci/config.yml
